FSCHEICW.L6 = Accumulation([FSCHEICW.L3,FSCHEICW.NTCOMBAT,FSCHEICW.L5, ],
    Configuration=[
          {'Type':'Earned Income'},
          {'SkipToInputIfOnlyOneSet':'true'},
     ],
     RoundTo=Dollars)


FSCHEICW.NTCOMBAT = Accumulation([ FSCHEICW.SNTCMBAT,FSCHEICW.TNTCMBAT, ],
    Configuration=[
          {'Type':'Taxpayer's nontaxable combat pay election for EIC'},
          {'Type':'Spouse's nontaxable combat pay election for EIC'},
     ],
     RoundTo=Dollars)


FSCHEICW.SNTCMBAT = NumericCopy([ FSCHEICW.SCOMBAT ],
     BlankIfFalse= FSCHEICW.SELECTY|SELECTN,
     RoundTo=Dollars)

FSCHEICW.TNTCMBAT = NumericCopy([ FSCHEICW.TCOMBAT ],
    BlankIfFalse= SCHEICW.YELECT|NELECT
    RoundTo=Dollars)



/Temporary/EIC/EICWorksheetPP/IsWagesSalariesAndTipsZero = AboveThreshold([FSCHEICW.L1, Threshold=/Constants/Zero, ],)


/Temporary/EIC/EICWorksheetPP/WageAdjustmentsCalcd = Difference([ Left=FSCHEICW.L1, Right=/Temporary/EIC/EICWorksheetPP/Line2Sum, ],
    Configuration=[
          {'SkipToLeftIfRightIsBlank':'true'},
     ],
     RoundTo=Dollars)


/Temporary/EIC/EICWorksheetPP/Line2Sum = Accumulation([FSCHEICW.L2B,FSCHEICW.L2F,FSCHEICW.L2G, ],
    Configuration=[
          {'Type':'Income reported as wages and as self-employment income'},
          {'Type':'Prison wages and any amount earned that is treated as belonging to the taxpayer'},
          {'Type':'Nonqualified plans reported on W-2'},
     ],
     RoundTo=Dollars)


FSCHEICW.L2G = MultiCopyAccumulation([FW2.NQPLANS, ],
    Configuration=[
          {'Type':'Nonqualified Plans'},
     ],
     RoundTo=Dollars)


FSCHEICW.L2F = Accumulation([FSCHEICW.L2DSP,FSCHEICW.L2D,FSCHEICW.L2C, ],
    Configuration=[
          {'Type':'Taxpayer's amount earned as prison inmate'},
          {'Type':'Spouse's amount earned as prison inmate'},
          {'Type':'Amount earned by spouse treated as belonging to taxpayer'},
     ],
     RoundTo=Dollars)


FSCHEICW.L2B = Accumulation([/Temporary/EIC/EICWorksheetPP/WagesAccumulation,/Temporary/EIC/EICWorksheetPP/ClergyHousingAccumulation,FSEADJ.OTHWAGES(spouse),FSEADJ.OTHWAGES(taxpayer),/Temporary/EIC/EarnedIncomeWorksheetPP/SpouseIRS1040LongScheduleSE/W2WagesFromChurchesAmt,/Temporary/EIC/EarnedIncomeWorksheetPP/TaxpayerIRS1040LongScheduleSE/W2WagesFromChurchesAmt, ],
    Configuration=[
          {'Type':'Total self-employment income'},
     ],
     RoundTo=Dollars)


/Temporary/EIC/EarnedIncomeWorksheetPP/SpouseIRS1040LongScheduleSE/W2WagesFromChurchesAmt = MultiCopySelectNumericByID([ Default=/Constants/NumericBlank, MultiCopy=FSCHSELT[uuid_1].L5A, ID=/Temporary/EIC/EarnedIncomeWorksheetPP/SpouseUUID, ],
     RoundTo=Dollars)


/Temporary/EIC/EarnedIncomeWorksheetPP/TaxpayerIRS1040LongScheduleSE/W2WagesFromChurchesAmt = MultiCopySelectNumericByID([ Default=/Constants/NumericBlank, MultiCopy=FSCHSELT[uuid_1].L5A, ID=/Temporary/EIC/EarnedIncomeWorksheetPP/TaxpayerUUID, ],
     RoundTo=Dollars)


if BlankIfFalse( /Temporary/EIC/TotalWagesAmtAboveZero ):
F1040.L60C = StringCopy([/Constants/EIC/ClergyString, ],)


/Temporary/EIC/ClergyMoneyAboveZero = AtLeastOneConditionTrue([ Condition=/Temporary/EIC/TotalHsgAmtAboveZero, Condition=/Temporary/EIC/TotalWagesAmtAboveZero, ],)


/Temporary/EIC/TotalHsgAmtAboveZero = AboveThreshold([/Temporary/EIC/EICWorksheetPP/ClergyHousingAccumulation, Threshold=/Constants/Zero, ],)


/Temporary/EIC/TotalWagesAmtAboveZero = AboveThreshold([/Temporary/EIC/EICWorksheetPP/WagesAccumulation, Threshold=/Constants/Zero, ],)


/Temporary/EIC/EICWorksheetPP/ClergyHousingAccumulation = MultiCopyAccumulation([/Temporary/EIC/EICWorksheetPP/ClergyHousingMCCombiner, ],
    Configuration=[
          {'Type':'Clergy Housing'},
     ],
     RoundTo=Dollars)


/Temporary/EIC/EICWorksheetPP/WagesAccumulation = MultiCopyAccumulation([/Temporary/EIC/EICWorksheetPP/WagesMCCombiner, ],
    Configuration=[
          {'Type':'W2 Wages'},
     ],
     RoundTo=Dollars)


/Temporary/EIC/EICWorksheetPP/WagesMCCombiner = MultiCopyMapper(/Temporary/EIC/EICWorksheetPP/IncludeWagesAmt/Temporary/IRSW2/WagesAmt[ ApplicableCondition=/Temporary/EIC/EICWorksheetPP/IncludeWagesAmt,/Temporary/IRSW2/WagesAmt, SkipToIfCopied=true, ],
     RoundTo=MultiCopy)


/Temporary/EIC/EICWorksheetPP/ClergyHousingMCCombiner = MultiCopyMapper(/Temporary/EIC/EICWorksheetPP/IncludeClergyHousing/Temporary/EIC/EICWorksheetPP/HousingDifferenceAmt[ ApplicableCondition=/Temporary/EIC/EICWorksheetPP/IncludeClergyHousing,/Temporary/EIC/EICWorksheetPP/HousingDifferenceAmt, SkipToIfCopied=true, ],
     RoundTo=MultiCopy)


/Temporary/EIC/EICWorksheetPP/HousingDifferenceAmt = MultiCopyMapper(/Temporary/EIC/EICWorksheetPP/HousingDifferenceAmtRaw[/Temporary/EIC/EICWorksheetPP/HousingDifferenceAmtRaw,/Constants/Zero, ],
     RoundTo=MultiCopy)


/Temporary/EIC/EICWorksheetPP/HousingDifferenceAmtRaw = MultiCopyMapper(/Temporary/IRSW2/ClergyDesignatedHousingAmtPP/Temporary/IRSW2/ClergySmallestHousingAmtPP[ Left=/Temporary/IRSW2/ClergyDesignatedHousingAmtPP, Right=/Temporary/IRSW2/ClergySmallestHousingAmtPP, ],
     RoundTo=MultiCopy)


/Temporary/EIC/EICWorksheetPP/IncludeClergyHousing = MultiCopyMapper(/Temporary/IRSW2/ClergySelfEmploymentTaxCdPP[ MultiCopy=/Constants/IRSW2/IncludeClergyHousing,/Temporary/IRSW2/ClergySelfEmploymentTaxCdPP, ],)


/Temporary/EIC/EICWorksheetPP/IncludeWagesAmt = MultiCopyMapper(/Temporary/IRSW2/ClergySelfEmploymentTaxCdPP[ MultiCopy=/Constants/IRSW2/IncludeWagesAmt,/Temporary/IRSW2/ClergySelfEmploymentTaxCdPP, ],)


FSCHEICW.L1 = NumericChoice([ Choice=/Temporary/EIC/IsWorksheetAccumulationBlank, Possibility=F1040.L7, Possibility=/Temporary/EIC/AccumulationFromWorksheet, ],
    Configuration=[
          {'ChoiceMapping':''},
     ],
     RoundTo=Dollars)


/Temporary/EIC/IsWorksheetAccumulationBlank = IsBlank([FW7.L15, ],)


/Temporary/EIC/AccumulationFromWorksheet = Accumulation([FW7.L10,FW7.L11,FW7.L12, ],
    Configuration=[
          {'Type':'Total income earned for EIC'},
     ],
     RoundTo=Dollars)


/Temporary/IRSW2/ClergySelfEmploymentTaxCdPP = MultiCopyMapper(/Return/ReturnData/IRSW2/(ClergySelfEmploymentTaxCdPP)[ Default=/Constants/StringBlank, MultiCopy=/Return/ReturnData/IRSW2/(ClergySelfEmploymentTaxCdPP), ID=/Constants/IRSW2/ClergySelfEmploymentTaxCdPPFieldName, ],)


/Temporary/IRSW2/ClergySmallestHousingAmtPP = MultiCopyMapper(/Return/ReturnData/IRSW2/(ClergySmallestHousingAmtPP)[ Default=/Constants/NumericBlank, MultiCopy=/Return/ReturnData/IRSW2/(ClergySmallestHousingAmtPP), ID=/Constants/IRSW2/ClergySmallestHousingAmtPPFieldName, ],
     RoundTo=MultiCopy)


ClergySmallestHousingAmtPP/Temporary/IRSW2/ClergyDesignatedHousingAmtPP = MultiCopyMapper(/Return/ReturnData/IRSW2/(ClergyDesignatedHousingAmtPP)[ Default=/Constants/NumericBlank, MultiCopy=/Return/ReturnData/IRSW2/(ClergyDesignatedHousingAmtPP), ID=/Constants/IRSW2/ClergyDesignatedHousingAmtPPFieldName, ],
     RoundTo=MultiCopy)


ClergyDesignatedHousingAmtPP/Temporary/IRSW2/WagesAmt = MultiCopyMapper(/Return/ReturnData/IRSW2/(WagesAmt)[ Default=/Constants/NumericBlank, MultiCopy=/Return/ReturnData/IRSW2/(WagesAmt), ID=/Constants/IRSW2/WagesAmtFieldName, ],
     RoundTo=MultiCopy)


WagesAmt